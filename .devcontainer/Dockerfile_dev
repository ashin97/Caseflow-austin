FROM --platform=linux/arm64 ruby:2.7.3-slim
MAINTAINER Development and Operations team @ Department of Veterans Affairs

# Build variables
ENV BUILD build-essential postgresql-client libaio1 libpq-dev libsqlite3-dev curl software-properties-common apt-transport-https pdftk ubuntu-dev-tools
ENV CASEFLOW git nodejs yarn

# Environment (system) variables
ENV LD_LIBRARY_PATH="/opt/oracle/instantclient_19_19" \
    ORACLE_HOME="/opt/oracle/instantclient_19_19" \
    OCI_DIR="/opt/oracle/instantclient_19_19" \
    LANG="AMERICAN_AMERICA.US7ASCII" \
    RAILS_ENV="development" \
    DEPLOY_ENV="development" \
    PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"

# install oracle deps
WORKDIR /opt/oracle/instantclient_19_19
COPY ../docker-bin/oracle_libs/. ./
# RUN ln -s libclntsh.so.19.1 libclntsh.so

WORKDIR /caseflow

# Copy all the files
COPY . .

RUN pwd && ls -lsa

# Build dependencies
RUN apt -y update && \
    apt -y upgrade && \
    mkdir -p /usr/share/man/man1 && \
    mkdir /usr/share/man/man7 && \
    apt install -y ${BUILD} && \
    curl -sL https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - && \
    echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list && \
    apt -y update && \
    curl -sL https://deb.nodesource.com/setup_$(cat .nvmrc | cut -d "." -f 1).x | bash - && \
    apt install -y ${CASEFLOW} &&  \
    curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - && \
    echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list && \
    apt-get clean && apt-get autoclean && apt-get autoremove

# install jemalloc
RUN apt install -y --no-install-recommends libjemalloc-dev

RUN rm -rf /var/lib/apt/lists/*

# RUN export LD_LIBRARY_PATH="/opt/oracle/instantclient_19_19" && \
#     export ORACLE_HOME="/opt/oracle/instantclient_19_19" && \
#     export OCI_DIR="/opt/oracle/instantclient_19_19"

# Installing the version of bundler that corresponds to the Gemfile.lock
# Rake 13.0.1 is already installed, so we're uninstalling it and letting bundler install rake later.
RUN gem install bundler:$(cat Gemfile.lock | tail -1 | tr -d " ") && gem uninstall -i /usr/local/lib/ruby/gems/2.7.0 rake
#RUN gem install ruby-oci8 -v '2.2.7'
#RUN gem install libv8 -v '3.16.14.19'
#RUN gem install therubyracer -v '0.12.3'
#RUN bundle config build.libv8 --with-system-v8
RUN gem install nokogiri --platform=ruby
RUN bundle install --verbose && \
    cd client && \
    yarn install && \
    yarn run build:demo && \
    chmod +x /caseflow/docker-bin/startup.sh && \
    rm -rf docker-bin

# Run the app
ENTRYPOINT ["/bin/bash", "-c", "/caseflow/docker-bin/startup.sh"]
